#!/usr/bin/env python3
"""Module containing the function def bi_rnn that performs forward propagation
for a bidirectional RNN."""

import numpy as np


def bi_rnn(bi_cell, X, h_0, h_t):
    """Function that performs forward propagation for a bidirectional RNN.

    Args:
        bi_cell (BidirectinalCell): An instance of BidirectinalCell that will
            be used for the forward propagation.
        X (numpy.ndarray): A tensor of shape (t, m, i), where t is the maximum
            number of time steps, m is the batch size, and i is the
            dimensionality of the data.
        h_0 (numpy.ndarray): A tensor of shape (m, h) that contains the initial
            hidden state in the forward direction, where m is the batch size,
            and h is the dimensionality of the hidden state.
        h_t (numpy.ndarray): A tensor of shape (m, h) that contains the initial
            hidden state in the backward direction, where m is the batch size,
            and h is the dimensionality of the hidden state.

    Returns:
        H (numpy.ndarray): A tensor of shape (t, m, 2 * h) containing all of
            the concatenated hidden states. t is the number of time steps, m is
            the batch size for the data, and h is the dimensionality of the
            hidden states.
        Y (numpy.ndarray): A tensor of shape (t, m, o) containing the
            outputs, where t is the number of time steps, m is the batch size
            for the data, and o is the dimensionality of the output.
    """
    T, m, _ = X.shape
    _, h = h_0.shape
    _, o = bi_cell.Wy.shape

    H_f = np.zeros((T, m, h))
    H_b = np.zeros((T, m, h))
    Y = np.zeros((T, m, o))

    for t in range(T):
        if (t == 0):
            h_prev = h_0
            h_next = h_t
        else:
            h_prev = H_f[t - 1]
            h_next = H_b[T - t]
        H_f[t] = bi_cell.forward(h_prev, X[t])
        H_b[T - 1 - t] = bi_cell.backward(h_next, X[T - 1 - t])

    H = np.concatenate((H_f, H_b), axis=-1)
    Y = bi_cell.output(H)

    return H, Y


# Testing
if __name__ == "__main__":
    # BidirectionalCell = __impo rt__('7-bi_output').BidirectionalCell

    np.random.seed(8)
    bi_cell = BidirectionalCell(10, 15, 5)
    X = np.random.randn(6, 8, 10)
    h_0 = np.zeros((8, 15))
    h_T = np.zeros((8, 15))
    H, Y = bi_rnn(bi_cell, X, h_0, h_T)
    print(H.shape)
    print(H)
    print(Y.shape)
    print(Y)

# Expected Output
"""
(6, 8, 30)
[[[-0.142426   -0.27269979 -0.1261149  ...  0.99703697  0.99999876
    0.33475822]
  [-0.98657892 -0.17301415 -0.99948619 ... -0.9999992   0.99999665
   -0.91056264]
  [-0.59374967 -0.9972812   0.31534158 ...  0.99998487 -0.99438889
    0.99868207]
  ...
  [-0.90286831  0.9997482  -0.54838883 ... -0.99999993  0.9998326
   -0.99998856]
  [-0.99814915  0.99999391  0.98954682 ... -0.89195736 -0.99992503
    0.99999981]
  [-0.94658288 -0.73348422 -0.91332885 ...  0.99992892  0.93183209
    0.99998907]]

 [[ 0.99992213  0.9992754  -0.99760101 ...  0.96347481  0.9960797
   -0.53400983]
  [-0.9999908  -0.99984319  0.97022927 ... -0.99794405  0.95457056
    0.43738498]
  [-0.99992314 -0.18598545  0.98135762 ... -0.9933573   0.73761931
    0.38448349]
  ...
  [ 0.97423786  0.93244351 -0.99891848 ...  0.88129927  0.9999997
    0.99770763]
  [ 0.97901295  0.99981403 -0.99866915 ...  0.95856825 -0.97385778
   -0.99999999]
  [-0.99997748  0.99996136  0.99999993 ...  0.99859924 -0.97417361
   -0.36408336]]

 [[-0.99984093  0.99843075 -0.99997541 ... -0.98228049 -0.82554477
    0.25007683]
  [ 0.96387669 -0.99999898  0.99999998 ...  0.97931683  0.99997883
    0.99949015]
  [ 0.99967345  0.999996   -0.98058393 ...  0.96549517  0.9997798
   -0.76874834]
  ...
  [-0.45415814 -0.99996657 -0.78141618 ... -0.2634109   0.96340997
   -0.99992214]
  [-0.9999999   0.59424397  0.98583034 ... -0.99994721 -0.99987497
   -0.99967415]
  [ 0.99989726  0.99978158  0.91377062 ... -0.99999972 -0.99995674
   -0.98027635]]

 [[-0.99947832 -0.99999868  0.99966355 ... -0.9999977  -0.99055586
    0.0980522 ]
  [ 0.99999831  0.33434475  0.81250526 ... -0.99965053  0.97086162
    0.99999983]
  [-0.99999932  0.99999993 -0.96892757 ...  0.99718454  0.99996739
   -0.99857639]
  ...
  [-0.90812605 -0.99989596 -0.98104243 ...  0.99820758  0.99999582
   -0.45085095]
  [-0.7568605  -0.70893851  0.99983157 ...  1.          0.43564012
    0.999949  ]
  [ 0.98628282  0.94375222 -0.19568597 ... -0.99997648  0.99952934
    0.9839509 ]]

 [[ 0.99999972 -0.99897172  0.99856494 ... -0.98473169 -0.99995549
    0.99876099]
  [ 0.99951781  0.13185414 -0.9830699  ...  0.44128169  0.99812516
    0.99770074]
  [-0.9999902   0.61142753  0.99797707 ... -0.80886497  0.97964801
    0.4759823 ]
  ...
  [-0.79305183 -0.95022358  0.99963218 ...  0.99536144 -0.9787176
    0.99996006]
  [-0.99527774  0.29244663  1.         ...  0.99999852 -0.97675266
    0.99999982]
  [-0.99999975  0.98792138 -0.55165171 ...  0.99943413 -0.99437607
    0.81359178]]

 [[-0.94615815 -0.99988863  0.9999532  ...  0.98213964 -0.99999629
    0.93794421]
  [-0.99933585  0.2252719   0.99999676 ...  0.99415707 -0.98571458
    0.9968197 ]
  [ 0.99990332 -0.999988    0.99504491 ... -0.33080153 -0.98536499
    0.99989831]
  ...
  [ 0.99999915 -0.81325985 -0.14963917 ... -0.98858814  0.31020546
   -0.99769618]
  [ 0.99999911  0.06400579  0.9856531  ... -0.98344879 -0.54019458
   -0.97604951]
  [-0.9999966  -0.99999878 -0.86326385 ... -0.99991958  0.04905784
   -0.99641258]]]
(6, 8, 5)
[[[1.58259570e-01 2.27591682e-04 8.72764894e-03 8.50232761e-06
   8.32776687e-01]
  [8.14329089e-08 7.43160807e-05 3.70213581e-07 2.59504195e-04
   9.99665728e-01]
  [1.12990488e-04 1.94737965e-03 3.82249571e-05 9.93149975e-01
   4.75143020e-03]
  [3.27064988e-01 1.09531066e-05 4.47431706e-01 2.25489314e-01
   3.03858516e-06]
  [1.64818904e-02 1.33116846e-02 3.55981047e-05 7.39846603e-03
   9.62772361e-01]
  [1.59442342e-01 2.76454062e-02 8.10603479e-01 2.16967527e-07
   2.30855638e-03]
  [7.20420750e-06 9.98142573e-01 1.46930002e-07 9.01110406e-04
   9.48965559e-04]
  [3.72522025e-07 5.00037544e-02 5.22532670e-06 1.77863276e-07
   9.49990470e-01]]

 [[7.12563830e-05 1.09676616e-05 9.99493812e-01 4.21503451e-04
   2.46024651e-06]
  [9.77936401e-01 1.08590861e-03 3.74335015e-03 2.75336533e-04
   1.69590034e-02]
  [2.73841350e-01 1.35374772e-04 1.15306427e-04 4.11052162e-06
   7.25903858e-01]
  [1.78316721e-02 5.96057276e-03 2.29253261e-03 1.25353665e-02
   9.61379856e-01]
  [5.61661837e-04 1.58836811e-03 9.08741976e-01 8.37431734e-02
   5.36482029e-03]
  [8.18956149e-04 6.29496955e-04 2.18860102e-04 5.57668497e-03
   9.92756002e-01]
  [2.30487501e-04 1.30611221e-02 3.93237324e-03 9.79618427e-01
   3.15758990e-03]
  [8.29144883e-03 5.58106428e-02 2.65475349e-04 5.94441959e-01
   3.41190474e-01]]

 [[4.53762996e-01 2.28174442e-05 8.11361305e-03 7.73919027e-04
   5.37326655e-01]
  [1.17518228e-02 1.29914149e-05 9.51902526e-01 2.81901133e-02
   8.14254687e-03]
  [1.59400388e-03 1.17674707e-04 6.42891353e-01 5.71571288e-04
   3.54825398e-01]
  [3.83960308e-09 1.52284147e-05 1.92269825e-11 3.49769208e-10
   9.99984767e-01]
  [2.32038508e-04 2.34129074e-04 4.14063122e-03 2.43202929e-05
   9.95368881e-01]
  [3.18229766e-03 9.53052062e-01 4.37635684e-02 7.37890161e-08
   1.99780195e-06]
  [8.35766860e-05 6.83102453e-01 2.91012213e-01 2.55206495e-02
   2.81108015e-04]
  [9.82345349e-01 2.08013661e-05 1.04491659e-02 7.18087532e-03
   3.80814606e-06]]

 [[1.70990845e-04 1.14022670e-01 4.35912854e-08 1.17443615e-05
   8.85794551e-01]
  [8.94911933e-01 2.99092235e-03 8.72348548e-03 9.32641617e-02
   1.09497305e-04]
  [2.04735490e-01 5.58914402e-02 6.14079671e-01 1.33433398e-04
   1.25159965e-01]
  [3.29993035e-04 9.90526575e-01 7.50756798e-04 5.16762677e-03
   3.22504836e-03]
  [9.88478543e-01 9.66772844e-04 1.01653530e-04 4.18941962e-03
   6.26361131e-03]
  [5.10388250e-02 2.09385364e-01 5.21791121e-01 2.51996152e-06
   2.17782170e-01]
  [9.88868936e-05 1.13628812e-02 4.77140806e-03 1.38890683e-07
   9.83766685e-01]
  [9.72279151e-01 6.79826555e-05 2.08378791e-03 2.55620102e-02
   7.06851400e-06]]

 [[8.70908318e-03 7.62125079e-06 6.62472167e-04 9.90620698e-01
   1.25606385e-07]
  [7.85962376e-01 2.87676207e-08 4.39047794e-04 2.13596254e-01
   2.29393784e-06]
  [5.29544703e-04 8.81463236e-01 1.83240666e-03 8.86254339e-04
   1.15288558e-01]
  [1.59476683e-05 9.99755695e-01 1.92466088e-04 2.96297497e-05
   6.26189265e-06]
  [9.46272285e-02 1.12213284e-03 1.00569969e-04 1.31128725e-04
   9.04018940e-01]
  [4.94773961e-07 9.65166712e-01 7.62310527e-07 6.03555588e-04
   3.42284755e-02]
  [2.17082363e-05 9.33652518e-01 3.98173133e-02 2.60845971e-02
   4.23863646e-04]
  [3.32279762e-06 1.88852633e-01 6.53467488e-03 7.46115060e-01
   5.84943096e-02]]

 [[1.29664720e-03 8.98170229e-01 7.47258309e-02 2.58004220e-02
   6.87126225e-06]
  [3.72457118e-01 4.99612274e-01 1.03466798e-01 2.43855228e-02
   7.82872712e-05]
  [2.03092793e-05 2.73275092e-07 1.27026821e-05 9.99966677e-01
   3.76754387e-08]
  [1.82026104e-02 1.36037082e-03 1.15593582e-01 8.41631483e-01
   2.32119541e-02]
  [2.73488243e-01 4.95831417e-05 7.48172924e-02 6.50077224e-01
   1.56765702e-03]
  [2.21594399e-02 9.91591602e-03 3.91043024e-02 9.28731799e-01
   8.85429016e-05]
  [1.85677039e-04 4.09547760e-03 4.88935110e-05 5.17163261e-01
   4.78506691e-01]
  [7.33488059e-05 1.09578224e-02 9.73392114e-08 2.12258836e-07
   9.88968519e-01]]]
"""
